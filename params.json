{"name":"Upload","tagline":"iframe and html5 file uploader for php","body":"# Upload\r\n\r\n---------------\r\n\r\niframe and html5 uploader.\r\n\r\n\r\n## 演示\r\n\r\n查看演示，你需要 clone 一份代码：\r\n\r\n```\r\n$ git clone git://github.com/aralejs/upload\r\n$ cd upload\r\n$ npm install\r\n$ node server.js\r\n```\r\n\r\n然后访问：http://localhost:8000/demo.html\r\n\r\n\r\n## Attributes\r\n\r\n```javascript\r\nvar uploader = new Uploader({\r\n    trigger: '#upload-icon',\r\n    name: 'image',\r\n    action: '/upload',\r\n    accept: 'image/*',\r\n    data: {'xsrf': 'hash'},\r\n    multiple: true,\r\n    error: function(file) {\r\n        alert(file);\r\n    },\r\n    success: function(response) {\r\n        alert(response);\r\n    }\r\n});\r\n```\r\n\r\n### trigger `element|selector`\r\n\r\ntrigger 唤出文件选择器，可以是：\r\n\r\n    - 选择器\r\n    - element\r\n    - jQuery Object\r\n\r\n### name `string`\r\n\r\nname 即为 `<input name=\"{{name}}\">` 的值，即上传文件时对应的 name。\r\n\r\n### action `url`\r\n\r\naction 为 `<form action=\"{{action}}\"> 的值，表单提交的地址。\r\n\r\n### accept `string`\r\n\r\n支持的文件类型，比如 `image/\\*` 为只上传图片类的文件。可选项。\r\n\r\n### multiple `boolean`\r\n\r\n是否支持多文件上传。默认为 false。\r\n\r\n### data `object`\r\n\r\n随表单一起要提交的数据。\r\n\r\n### error `function`\r\n\r\n上传失败的回调函数。\r\n\r\n### success `function`\r\n\r\n上传成功的回调函数。\r\n\r\n\r\n## Methods\r\n\r\nChain style:\r\n\r\n```javascript\r\nvar uploader = new Uploader({\r\n    trigger: '#upload-icon',\r\n    name: 'image',\r\n    action: '/upload',\r\n    data: {'xsrf': 'hash'}\r\n}).success(function(response) {\r\n    alert(response);\r\n}).error(function(file) {\r\n    alert(file);\r\n});\r\n```\r\n\r\n## Data API\r\n\r\n```html\r\n<a id=\"upload\" data-name=\"image\" data-action=\"/upload\" data-data=\"a=a&b=b\">Upload</a>\r\n<script>\r\nvar uploader = new Uploader({'trigger': '#upload'});\r\n// more friendly way\r\n// var uploader = new Uploader('#upload');\r\nuploader.success(function(response) {\r\n    alert(response);\r\n});\r\n</script>\r\n```\r\n\r\n## Advanced\r\n\r\nDemo in **API** section could not be controlled. When you select a file, it will\r\nbe submitted immediately. We can broke the chain with ``change``:\r\n\r\n```javascript\r\nvar uploader = new Uploader({\r\n    trigger: '#upload-icon',\r\n    name: 'image',\r\n    action: '/upload',\r\n    data: {'xsrf': 'hash'}\r\n}).change(function(filename) {\r\n    alert('you are selecting ' + filename);\r\n    // Default behavior of change is\r\n    // this.submit();\r\n}).success(function(response) {\r\n    alert(response);\r\n});\r\n```\r\n\r\nNow you should handle it yourself:\r\n\r\n```javascript\r\n$('#submit').click(function() {\r\n    uploader.submit();\r\n});\r\n```\r\n\r\n\r\n## Show Progress\r\n\r\nIt is impossible to show progress, but you can make a fake prgress.\r\n\r\n\r\n```javascript\r\nvar uploader = new Uploader({\r\n    trigger: '#upload-icon',\r\n    name: 'image',\r\n    action: '/upload',\r\n    data: {'xsrf': 'hash'}\r\n}).change(function(filename) {\r\n    // before submit\r\n    $('#progress').text('Uploading ...');\r\n    this.submit();\r\n}).success(function(response) {\r\n    $('#progress').text('Success');\r\n    alert(response);\r\n});\r\n```\r\n\r\n\r\n## Seajs Hint\r\n\r\nLoad uploader with seajs:\r\n\r\n```javascript\r\nseajs.use('upload', function(Uploader) {\r\n    var uploader = new Uploader({\r\n    });\r\n});\r\n```\r\n\r\n## Changelog\r\n\r\n**2013-07-18** `1.0.1`\r\n\r\n1. Support choosing the same file for uploader\r\n2. Fix memory leaks for FormData\r\n\r\n**2013-06-25** `1.0.0`\r\n\r\nCombine iframe and html5 uploader.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}